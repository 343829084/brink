// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protobuf_define.txt

#ifndef PROTOBUF_protobuf_5fdefine_2etxt__INCLUDED
#define PROTOBUF_protobuf_5fdefine_2etxt__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_protobuf_5fdefine_2etxt();
void protobuf_AssignDesc_protobuf_5fdefine_2etxt();
void protobuf_ShutdownFile_protobuf_5fdefine_2etxt();

class pbuf_head;
class pbuf_body;

// ===================================================================

class pbuf_head : public ::google::protobuf::Message {
 public:
  pbuf_head();
  virtual ~pbuf_head();

  pbuf_head(const pbuf_head& from);

  inline pbuf_head& operator=(const pbuf_head& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pbuf_head& default_instance();

  void Swap(pbuf_head* other);

  // implements Message ----------------------------------------------

  pbuf_head* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pbuf_head& from);
  void MergeFrom(const pbuf_head& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed32 length = 1;
  inline bool has_length() const;
  inline void clear_length();
  static const int kLengthFieldNumber = 1;
  inline ::google::protobuf::uint32 length() const;
  inline void set_length(::google::protobuf::uint32 value);

  // required fixed32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pbuf_head)
 private:
  inline void set_has_length();
  inline void clear_has_length();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 length_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_protobuf_5fdefine_2etxt();
  friend void protobuf_AssignDesc_protobuf_5fdefine_2etxt();
  friend void protobuf_ShutdownFile_protobuf_5fdefine_2etxt();

  void InitAsDefaultInstance();
  static pbuf_head* default_instance_;
};
// -------------------------------------------------------------------

class pbuf_body : public ::google::protobuf::Message {
 public:
  pbuf_body();
  virtual ~pbuf_body();

  pbuf_body(const pbuf_body& from);

  inline pbuf_body& operator=(const pbuf_body& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pbuf_body& default_instance();

  void Swap(pbuf_body* other);

  // implements Message ----------------------------------------------

  pbuf_body* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pbuf_body& from);
  void MergeFrom(const pbuf_body& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 length = 1;
  inline bool has_length() const;
  inline void clear_length();
  static const int kLengthFieldNumber = 1;
  inline ::google::protobuf::uint32 length() const;
  inline void set_length(::google::protobuf::uint32 value);

  // optional uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint32 reserve = 3;
  inline bool has_reserve() const;
  inline void clear_reserve();
  static const int kReserveFieldNumber = 3;
  inline ::google::protobuf::uint32 reserve() const;
  inline void set_reserve(::google::protobuf::uint32 value);

  // optional string str = 4;
  inline bool has_str() const;
  inline void clear_str();
  static const int kStrFieldNumber = 4;
  inline const ::std::string& str() const;
  inline void set_str(const ::std::string& value);
  inline void set_str(const char* value);
  inline void set_str(const char* value, size_t size);
  inline ::std::string* mutable_str();
  inline ::std::string* release_str();
  inline void set_allocated_str(::std::string* str);

  // optional bytes binary = 5;
  inline bool has_binary() const;
  inline void clear_binary();
  static const int kBinaryFieldNumber = 5;
  inline const ::std::string& binary() const;
  inline void set_binary(const ::std::string& value);
  inline void set_binary(const char* value);
  inline void set_binary(const void* value, size_t size);
  inline ::std::string* mutable_binary();
  inline ::std::string* release_binary();
  inline void set_allocated_binary(::std::string* binary);

  // @@protoc_insertion_point(class_scope:pbuf_body)
 private:
  inline void set_has_length();
  inline void clear_has_length();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_reserve();
  inline void clear_has_reserve();
  inline void set_has_str();
  inline void clear_has_str();
  inline void set_has_binary();
  inline void clear_has_binary();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 length_;
  ::google::protobuf::uint32 type_;
  ::std::string* str_;
  ::std::string* binary_;
  ::google::protobuf::uint32 reserve_;
  friend void  protobuf_AddDesc_protobuf_5fdefine_2etxt();
  friend void protobuf_AssignDesc_protobuf_5fdefine_2etxt();
  friend void protobuf_ShutdownFile_protobuf_5fdefine_2etxt();

  void InitAsDefaultInstance();
  static pbuf_body* default_instance_;
};
// ===================================================================


// ===================================================================

// pbuf_head

// required fixed32 length = 1;
inline bool pbuf_head::has_length() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pbuf_head::set_has_length() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pbuf_head::clear_has_length() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pbuf_head::clear_length() {
  length_ = 0u;
  clear_has_length();
}
inline ::google::protobuf::uint32 pbuf_head::length() const {
  // @@protoc_insertion_point(field_get:pbuf_head.length)
  return length_;
}
inline void pbuf_head::set_length(::google::protobuf::uint32 value) {
  set_has_length();
  length_ = value;
  // @@protoc_insertion_point(field_set:pbuf_head.length)
}

// required fixed32 type = 2;
inline bool pbuf_head::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void pbuf_head::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void pbuf_head::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void pbuf_head::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 pbuf_head::type() const {
  // @@protoc_insertion_point(field_get:pbuf_head.type)
  return type_;
}
inline void pbuf_head::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:pbuf_head.type)
}

// -------------------------------------------------------------------

// pbuf_body

// required uint32 length = 1;
inline bool pbuf_body::has_length() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pbuf_body::set_has_length() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pbuf_body::clear_has_length() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pbuf_body::clear_length() {
  length_ = 0u;
  clear_has_length();
}
inline ::google::protobuf::uint32 pbuf_body::length() const {
  // @@protoc_insertion_point(field_get:pbuf_body.length)
  return length_;
}
inline void pbuf_body::set_length(::google::protobuf::uint32 value) {
  set_has_length();
  length_ = value;
  // @@protoc_insertion_point(field_set:pbuf_body.length)
}

// optional uint32 type = 2;
inline bool pbuf_body::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void pbuf_body::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void pbuf_body::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void pbuf_body::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 pbuf_body::type() const {
  // @@protoc_insertion_point(field_get:pbuf_body.type)
  return type_;
}
inline void pbuf_body::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:pbuf_body.type)
}

// optional uint32 reserve = 3;
inline bool pbuf_body::has_reserve() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void pbuf_body::set_has_reserve() {
  _has_bits_[0] |= 0x00000004u;
}
inline void pbuf_body::clear_has_reserve() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void pbuf_body::clear_reserve() {
  reserve_ = 0u;
  clear_has_reserve();
}
inline ::google::protobuf::uint32 pbuf_body::reserve() const {
  // @@protoc_insertion_point(field_get:pbuf_body.reserve)
  return reserve_;
}
inline void pbuf_body::set_reserve(::google::protobuf::uint32 value) {
  set_has_reserve();
  reserve_ = value;
  // @@protoc_insertion_point(field_set:pbuf_body.reserve)
}

// optional string str = 4;
inline bool pbuf_body::has_str() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void pbuf_body::set_has_str() {
  _has_bits_[0] |= 0x00000008u;
}
inline void pbuf_body::clear_has_str() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void pbuf_body::clear_str() {
  if (str_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    str_->clear();
  }
  clear_has_str();
}
inline const ::std::string& pbuf_body::str() const {
  // @@protoc_insertion_point(field_get:pbuf_body.str)
  return *str_;
}
inline void pbuf_body::set_str(const ::std::string& value) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    str_ = new ::std::string;
  }
  str_->assign(value);
  // @@protoc_insertion_point(field_set:pbuf_body.str)
}
inline void pbuf_body::set_str(const char* value) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    str_ = new ::std::string;
  }
  str_->assign(value);
  // @@protoc_insertion_point(field_set_char:pbuf_body.str)
}
inline void pbuf_body::set_str(const char* value, size_t size) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    str_ = new ::std::string;
  }
  str_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pbuf_body.str)
}
inline ::std::string* pbuf_body::mutable_str() {
  set_has_str();
  if (str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    str_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:pbuf_body.str)
  return str_;
}
inline ::std::string* pbuf_body::release_str() {
  clear_has_str();
  if (str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = str_;
    str_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void pbuf_body::set_allocated_str(::std::string* str) {
  if (str_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete str_;
  }
  if (str) {
    set_has_str();
    str_ = str;
  } else {
    clear_has_str();
    str_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:pbuf_body.str)
}

// optional bytes binary = 5;
inline bool pbuf_body::has_binary() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void pbuf_body::set_has_binary() {
  _has_bits_[0] |= 0x00000010u;
}
inline void pbuf_body::clear_has_binary() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void pbuf_body::clear_binary() {
  if (binary_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    binary_->clear();
  }
  clear_has_binary();
}
inline const ::std::string& pbuf_body::binary() const {
  // @@protoc_insertion_point(field_get:pbuf_body.binary)
  return *binary_;
}
inline void pbuf_body::set_binary(const ::std::string& value) {
  set_has_binary();
  if (binary_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    binary_ = new ::std::string;
  }
  binary_->assign(value);
  // @@protoc_insertion_point(field_set:pbuf_body.binary)
}
inline void pbuf_body::set_binary(const char* value) {
  set_has_binary();
  if (binary_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    binary_ = new ::std::string;
  }
  binary_->assign(value);
  // @@protoc_insertion_point(field_set_char:pbuf_body.binary)
}
inline void pbuf_body::set_binary(const void* value, size_t size) {
  set_has_binary();
  if (binary_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    binary_ = new ::std::string;
  }
  binary_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pbuf_body.binary)
}
inline ::std::string* pbuf_body::mutable_binary() {
  set_has_binary();
  if (binary_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    binary_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:pbuf_body.binary)
  return binary_;
}
inline ::std::string* pbuf_body::release_binary() {
  clear_has_binary();
  if (binary_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = binary_;
    binary_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void pbuf_body::set_allocated_binary(::std::string* binary) {
  if (binary_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete binary_;
  }
  if (binary) {
    set_has_binary();
    binary_ = binary;
  } else {
    clear_has_binary();
    binary_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:pbuf_body.binary)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_protobuf_5fdefine_2etxt__INCLUDED
